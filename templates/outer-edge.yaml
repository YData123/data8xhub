clusterEdges:
{% for cluster_name, cluster in config.clusters.items() %}
- name: {{ cluster_name }}
  ip: {{ cluster.ip }}
{% endfor %}

project: {{ config.project }}
region: {{ config.region }}
deployment: {{ deployment }}
proxy:
  replicaCount: {{ config.miscCluster.outerEdge.proxy.replicaCount }}
  {% if config.miscCluster.outerEdge.proxy.loadBalancerIP %}
  loadBalancerIP: {{ config.miscCluster.outerEdge.proxy.loadBalancerIP }}
  {% endif %}
  resources:
    requests:
      cpu: 0.25
      memory: 1Gi
    limits:
      cpu: 0.25
      memory: 1Gi

sharderBuckets: |
{% for cluster_name, cluster in config.clusters.items() %}
{% for hub_name, hub in cluster.hubs.items() %}
  {"cluster": "{{cluster_name}}", "hub": "{{hub_name}}"}
{% endfor %}
{% endfor %}

sharder:
  replicaCount: {{ config.miscCluster.outerEdge.sharder.replicaCount }}

hwuploader:
  replicaCount: {{ config.miscCluster.hwuploader.replicaCount }}
  fileserver: {{ deployment }}-{{ config.miscCluster.hwuploader.fileserver }}

grafana:
  serverConfigFile:
    grafana.ini: |
      ; instance_name = ${HOSTNAME}
      [paths]
      data = /var/lib/grafana/data
      logs = /var/log/grafana
      plugins = /var/lib/grafana/plugins

      [server]
      domain = {{ domain }}
      root_url = https://%(domain)s/grafana/

      [users]
      allow_sign_up = false

      [auth.anonymous]
      enabled = true
      org_name = Main Org.
      org_role = Viewer
      [log]
      mode = console
      level = info
      [dashboards.json]
      enabled = true
      path = /var/lib/grafana/dashboards
      [grafana_net]
      url = https://grafana.net