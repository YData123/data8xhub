resources:
{% if config.loadTest %}
- type: container.v1.cluster
  name: {{ deployment }}-loadtest
  properties:
    zone: {{ config.loadTest.zone }}
    cluster:
      name: {{ deployment }}-loadtest
      network: default
      initialClusterVersion: 1.9.2-gke.1
      addonsConfig:
        httpLoadBalancing:
          disabled: true
      legacyAbac:
        enabled: true
      nodePools:
        - initialNodeCount: {{ config.loadTest.initialNodeCount }}
          name: default
          autoscaling:
            enabled: true
            minNodeCount: {{ config.loadTest.initialNodeCount }}
            maxNodeCount: 20
          config:
            machineType: {{ config.loadTest.machineType }}
            diskSizeGb: {{ config.loadTest.bootDiskSizeGb }}
            metadata:
              deployment: {{ deployment }}
              cluster: loadTest
            oauthScopes:
              - https://www.googleapis.com/auth/compute
              - https://www.googleapis.com/auth/devstorage.read_only
              - https://www.googleapis.com/auth/logging.write
              - https://www.googleapis.com/auth/monitoring
{% endif %}
{% if config.outerEdge %}
- type: container.v1.cluster
  name: {{ deployment }}-outer-edge
  properties:
    zone: {{ config.outerEdge.zone }}
    cluster:
      name: {{ deployment }}-outer-edge
      network: default
      initialClusterVersion: 1.9.2-gke.1
      addonsConfig:
        httpLoadBalancing:
          disabled: true
      legacyAbac:
        enabled: false
      nodePools:
        - initialNodeCount: {{ config.outerEdge.initialNodeCount }}
          name: default
          autoscaling:
            enabled: true
            minNodeCount: {{ config.outerEdge.initialNodeCount }}
            maxNodeCount: 10
          config:
            machineType: {{ config.outerEdge.machineType }}
            diskSizeGb: {{ config.outerEdge.bootDiskSizeGb }}
            metadata:
              deployment: {{ deployment }}
              cluster: outer-edge
            oauthScopes:
              - https://www.googleapis.com/auth/compute
              - https://www.googleapis.com/auth/devstorage.read_only
              - https://www.googleapis.com/auth/logging.write
              - https://www.googleapis.com/auth/monitoring
{% endif %}
{%- for name, fileserver in config.fileservers.items() %}
- type: compute.v1.disk
  name: {{ deployment }}-{{ name }}-data-disk
  properties:
    zone: {{ fileserver.zone }}
    sizeGb: {{ fileserver.dataDiskSizeGb }}
    type: https://www.googleapis.com/compute/v1/projects/{{ config.project }}/zones/{{ fileserver.zone }}/diskTypes/pd-ssd
- type: compute.v1.instance
  name: {{ deployment }}-{{ name }}
  properties:
    zone: {{ fileserver.zone }}
    machineType: https://www.googleapis.com/compute/v1/projects/{{ config.project }}/zones/{{ fileserver.zone }}/machineTypes/{{ fileserver.machineType }}
    tags:
      items:
        - deployment-{{ deployment }}
        - role-nfs-host
    metadata:
      items:
       - key: deployment
         value: {{ deployment }}
       - key: name
         value: "{{ name }}"
       - key: startup-script
         value: |
           #!/bin/bash
           set -euxo pipefail
           CLONE_PATH=/var/lib/ansible
           sudo apt-get update
           sudo apt-get install --yes ansible git
           sudo git clone http://github.com/berkeley-dsep-infra/data8xhub ${CLONE_PATH}
           sudo ansible-playbook -c local -i localhost, ${CLONE_PATH}/ansible/playbook.yml
    disks:
    - deviceName: boot
      type: PERSISTENT
      boot: true
      autoDelete: true
      initializeParams:
        diskName: {{ deployment }}-{{ name }}-boot-disk
        sourceImage: https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/family/ubuntu-1710
    - deviceName: {{ deployment }}-{{ name }}-data-disk
      type: PERSISTENT
      source: $(ref.{{ deployment }}-{{ name }}-data-disk.selfLink)
      autoDelete: false
    networkInterfaces:
    - network: https://www.googleapis.com/compute/v1/projects/{{ config.project }}/global/networks/default
      # Access Config required to give the instance a public IP address
      accessConfigs:
      - name: External NAT
        type: ONE_TO_ONE_NAT
{% endfor %}
- type: compute.v1.firewall
  name: {{ deployment }}-nfs-firewall
  properties:
    name: {{ deployment }}-nfs-firewall
    description: Allow NFS access from k8s cluster to NFS hosts
    network: global/networks/default
    sourceTags:
      - deployment-{{ deployment }}
      - role-hub-cluster
    targetTags:
      - deployment-{{ deployment }}
      - role-nfs-host
    allowed:
      - IPProtocol: TCP
        ports: ["0-65535"]
- type: compute.v1.firewall
  name: {{ deployment }}-nfs-firewall-egress
  properties:
    name: {{ deployment }}-nfs-firewall-egress
    description: Allow NFS access from k8s cluster to NFS hosts
    network: global/networks/default
    sourceTags:
      - deployment-{{ deployment }}
      - role-hub-cluster
    targetTags:
      - deployment-{{ deployment }}
      - role-nfs-host
    allowed:
      - IPProtocol: TCP
        ports: ["0-65535"]
- type: sqladmin.v1beta4.instance
  name: {{ deployment }}-nfs-db-instance
  properties:
    region: {{ config.region }}
    databaseVersion: POSTGRES_9_6
    backendType: SECOND_GEN
    settings:
      availabilityType: REGIONAL
      tier: db-custom-4-10240
- type: sqladmin.v1beta4.database
  name: {{ deployment }}-nfs-sharder-db
  properties:
    instance: $(ref.{{ deployment }}-nfs-db-instance.name)
    name: {{ deployment }}-nfs-sharder-db
# FIXME: Provide more fine-grained permissions here?
- type: sqladmin.v1beta4.user
  name: {{ deployment }}-db-proxyuser
  properties:
    instance: $(ref.{{ deployment }}-nfs-db-instance.name)
    name: {{ deployment }}-db-proxyuser
    host: '%'
    password: {{ config.sql.password }}
- type: sqladmin.v1beta4.instance
  name: {{ deployment }}-hubshard-db-instance
  properties:
    region: {{ config.region }}
    databaseVersion: POSTGRES_9_6
    backendType: SECOND_GEN
    settings:
      availabilityType: REGIONAL
      tier: db-custom-4-10240
- type: sqladmin.v1beta4.database
  name: {{ deployment }}-hubshard-sharder-db
  properties:
    instance: $(ref.{{ deployment }}-hubshard-db-instance.name)
    name: {{ deployment }}-hubshard-sharder-db
# FIXME: Provide more fine-grained permissions here?
- type: sqladmin.v1beta4.user
  name: {{ deployment }}-hubshard-db-proxyuser
  properties:
    instance: $(ref.{{ deployment }}-hubshard-db-instance.name)
    # Use the same name so we can reuse the csql stuff
    name: {{ deployment }}-db-proxyuser
    host: '%'
    password: {{ config.sql.password }}
