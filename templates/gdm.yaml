resources:
{%- for cluster in clusters %}
- type: container.v1.cluster
  name: {{ deployment }}-cluster-{{ cluster.name }}
  properties:
    zone: {{ cluster.zone }}
    cluster:
      name: {{ deployment }}-cluster-{{ cluster.name }}
      network: default
      addonsConfig:
        httpLoadBalancing:
          disabled: true
      legacyAbac:
        enabled: false
      nodePools:
        - initialNodeCount: 1
          name: default
          autoscaling:
            enabled: true
            minNodeCount: 1
            maxNodeCount: 50
          config:
            machineType: {{ cluster.machineType }}
            diskSizeGb: {{ cluster.bootDiskSizeGb }}
            imageType: ubuntu
            metadata:
              deployment: {{ deployment }}
              cluster: {{ cluster.name }}
            oauthScopes:
              - https://www.googleapis.com/auth/compute
              - https://www.googleapis.com/auth/devstorage.read_only
              - https://www.googleapis.com/auth/logging.write
              - https://www.googleapis.com/auth/monitoring
{%- for hub in cluster.hubs %}
- type: compute.v1.disk
  name: {{ deployment }}-nfs-disk-{{ hub.name }}
  properties:
    zone: {{ cluster.zone }}
    sizeGb: {{ hub.nfs.dataDiskSizeGb }}
    type: https://www.googleapis.com/compute/v1/projects/{{ project }}/zones/{{ cluster.zone }}/diskTypes/pd-ssd
- type: compute.v1.instance
  name: {{ deployment }}-nfs-vm-{{ hub.name }}
  properties:
    zone: {{ cluster.zone }}
    machineType: https://www.googleapis.com/compute/v1/projects/{{ project }}/zones/{{ cluster.zone }}/machineTypes/{{ hub.nfs.machineType }}
    metadata:
      items:
       - key: deployment
         value: {{ deployment }}
       - key: cluster
         value: {{ cluster.name }}
       - key: hub
         value: {{ hub.name }}
       - key: startup-script
         value: |
           #!/bin/bash
           CLONE_PATH=/var/lib/ansible
           sudo apt-get install --yes ansible git
           sudo git clone http://github.com/berkeley-dsep-infra/data8xhub ${CLONE_PATH}
           sudo ansible-playbook -c local -i localhost, ${CLONE_PATH}/ansible/playbook.yml
    disks:
    - deviceName: boot
      type: PERSISTENT
      boot: true
      autoDelete: true
      initializeParams:
        diskName: boot-nfs-{{ deployment }}-{{ hub.name }}
        sourceImage: https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/family/ubuntu-1710
    - deviceName: nfs-disk-{{ hub.name }}
      type: PERSISTENT
      source: $(ref.{{ deployment }}-nfs-disk-{{ hub.name }}.selfLink)
      autoDelete: false
    networkInterfaces:
    - network: https://www.googleapis.com/compute/v1/projects/{{ project }}/global/networks/default
      # Access Config required to give the instance a public IP address
      accessConfigs:
      - name: External NAT
        type: ONE_TO_ONE_NAT
{% endfor %}
{% endfor %}
